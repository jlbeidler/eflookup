#!/usr/bin/env python

"""import-fccs2ef.py: reads files containing mappings from FCCS fuelbed ids
to cover type ids, from covert type ids to EF groupings, and from EF groupings
to EF sets, and then writes the mappings out in more consise manner to new
data files
"""

__author__      = "Joel Dubowy"

import logging
import sys
import traceback

from afscripting import (
    args as scripting_args,
    utils as scripting_utils
)

from eflookup.fccs2ef.importer import (
    Fccs2CoverTypeImporter, CoverType2EfGroupImporter,
    EfGroup2EfImporter, CatPhase2EFGroupImporter
)

# Note: though some argue that all required parameters should be specified as
# positional arguments, I prefer using 'options' flags, even though this
# means that there are required 'options', which is oxymoronic.

REQUIRED_OPTIONS = []

OPTIONAL_OPTIONS = [
    # Input files
    {
        'long': "--fccs-2-cover-type-input",
        'help': "csv containing mappings of FCCS fuelbed id to cover type id",
        'metavar': "FILE",
        'default': "./input-data/orig-fccs2covertype.csv"
    },
    {
        'long': "--cover-type-2-ef-group-input",
        'help': "csv containing mappings of cover type id to emission factor group",
        'metavar': "FILE",
        'default': "./input-data/orig-covertype2efgroup.csv"
    },
    {
        'long': "--cat-phase-2-ef-group-input",
        'help': "csv containing ....",
        'metavar': "FILE",
        'default': "./input-data/orig-catphase2efgroup.csv"
    },
    {
        'long': "--ef-group-2-ef-input",
        'help': "csv containing mappings of emission factor group to emission factors set",
        'metavar': "FILE",
        'default': "./input-data/orig-efgroup2ef.csv"
    }
]
EXAMPLES_STRING = """
Example calls:
 $ ./dev/scripts/import-fccs2ct2ef --log-level=DEBUG
 """

def main():
    parser, args = scripting_args.parse_args(REQUIRED_OPTIONS,
        OPTIONAL_OPTIONS, epilog=EXAMPLES_STRING)

    try:
        Fccs2CoverTypeImporter(args.fccs_2_cover_type_input).write()
        CoverType2EfGroupImporter(args.cover_type_2_ef_group_input).write()
        EfGroup2EfImporter(args.ef_group_2_ef_input).write()
        CatPhase2EFGroupImporter(args.cat_phase_2_ef_group_input).write()

    except Exception as e:
        scripting_utils.exit_with_msg(str(e) + '\n\n' + traceback.format_exc())

if __name__ == "__main__":
    main()

#!/usr/bin/env python

"""cropsef: returns crop style emissions factors
"""

__author__      = "James Beidler"

import json
import logging
import sys

from afscripting import (
    args as scripting_args,
    utils as scripting_utils
)

from eflookup.crops2ef import Crops2Ef

OPTIONAL_OPTIONS = [
    {
        'short': '-c',
        'long': '--cropid',
        'help': "modified crop CDL ID (9000+CDL ID)"
    },
    {
        'short': '-s',
        'long': '--species',
        'help': "emissions species (e.g. 'CO2', 'PM2.5')"
    },
]
EXAMPLES_STRING = """
Example calls:
 $ {script_name}
 $ {script_name} -c 9001 -s CO2
 $ {script_name} -c 9003 -s PM2.5 
 """.format(script_name=sys.argv[0])

def main():
    parser, args = scripting_args.parse_args([], OPTIONAL_OPTIONS,
        epilog=EXAMPLES_STRING)

    try:
        look_up = Crops2Ef(args.cropid)
        r = look_up.get(species=args.species)
        if args.species is not None:
            r = {args.species: r}
        sys.stdout.write(json.dumps(r))

    except Exception as e:
        if logging.getLogger().getEffectiveLevel() <= logging.DEBUG:
            scripting_utils.exit_with_msg(traceback.format_exc(), prefix="")
        else:
            scripting_utils.exit_with_msg(str(e))

if __name__ == "__main__":
    main()

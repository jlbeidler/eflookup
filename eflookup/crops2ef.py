"""eflookup.crops2ef.lookup:

Adapted from FEPS lookup script
Emissions factors from McCarty 2011
Methods from Pouliot 2017
14 Mar 2024 - J. Beidler <beidler.james@epa.gov>
Corn, Rice, Wheat, and Sugarcane CO2, CO, CH4, NOX, SO2, and NH3 updated to use Hall 2023 (https://zenodo.org/records/7013656#.YzC4MHbMKUk) crop-specific mean
All other crop NH3 updated to use Hall 2023 mean
"""

__author__      = "James Beidler"

from .lookup import BasicEFLookup

__all__ = [
    'Crops2Ef',
]

# Crop codes listed below are from the CDL
# See https://www.nass.usda.gov/Research_and_Science/Cropland/metadata/metadata_Cultivated-Layer-2022.htm for reference to crop name
# EFs in lbs/ton
CROPSEF = {
'1': {'CO2': 3054.341, 'CH4': 4.872, 'CO': 118.7041, 'NOX': 6.36022, 'SO2': 1.01667, 'PM2.5': 9.940884755, 'PM10': 21.360925, 'VOC': 18.47246, 'NH3': 1.0925, 'hap_50000': 1.025634, 'hap_75070': 1.521677, 'hap_110543': 0.172563, 'hap_71432': 0.227658, 'hap_123386': 0.218663, 'hap_106990': 0.161739, 'hap_108883': 0.170455, 'hap_100425': 0.025581, 'hap_100414': 0.026645, 'hap_540841': 0.006738, 'hap_98828': 0.002136, 'hap_1330207': 0.066206, 'PEC': 1.083556438, 'POC': 3.859051462}, 
'2': {'CO2': 2900.823, 'CH4': 5.094893, 'CO': 109.9558, 'NOX': 4.522879, 'SO2': 1.136893, 'PM2.5': 8.068089333, 'PM10': 14.09666667, 'VOC': 18.68672, 'NH3': 0.788946, 'hap_50000': 1.355905, 'hap_75070': 1.10033, 'hap_110543': 0.313249, 'hap_71432': 0.220424, 'hap_123386': 0.179053, 'hap_106990': 0.127599, 'hap_108883': 0.094804, 'hap_100425': 0.018471, 'hap_100414': 0.01489, 'hap_540841': 0.002262, 'hap_98828': 0.000942, 'hap_1330207': 0.040523, 'PEC': 0.879421737, 'POC': 3.132032279}, 
'3': {'CO2': 3031.37, 'CH4': 6.304830611, 'CO': 127.7043834, 'NOX': 6.325035567, 'SO2': 3.131320992, 'PM2.5': 12.37676951, 'PM10': 17.73, 'VOC': 18.47246, 'NH3': 1.61, 'hap_50000': 1.025634, 'hap_75070': 1.521677, 'hap_110543': 0.172563, 'hap_71432': 0.227658, 'hap_123386': 0.218663, 'hap_106990': 0.161739, 'hap_108883': 0.170455, 'hap_100425': 0.025581, 'hap_100414': 0.026645, 'hap_540841': 0.006738, 'hap_98828': 0.002136, 'hap_1330207': 0.066206, 'PEC': 1.349067877, 'POC': 4.804661924}, 
'4': {'CO2': 3031.37, 'CH4': 7.206225045, 'CO': 146.124354, 'NOX': 6.889022868, 'SO2': 3.131320992, 'PM2.5': 12.37676951, 'PM10': 17.73, 'VOC': 18.47246, 'NH3': 1.61, 'hap_50000': 1.025634, 'hap_75070': 1.521677, 'hap_110543': 0.172563, 'hap_71432': 0.227658, 'hap_123386': 0.218663, 'hap_106990': 0.161739, 'hap_108883': 0.170455, 'hap_100425': 0.025581, 'hap_100414': 0.026645, 'hap_540841': 0.006738, 'hap_98828': 0.002136, 'hap_1330207': 0.066206, 'PEC': 1.349067877, 'POC': 4.804661924}, 
'6': {'CO2': 3031.37, 'CH4': 5.632874736, 'CO': 127.7919467, 'NOX': 5.596176066, 'SO2': 2.344437922, 'PM2.5': 12.31421121, 'PM10': 16.99917976, 'VOC': 18.47246, 'NH3': 1.61, 'hap_50000': 1.025634, 'hap_75070': 1.521677, 'hap_110543': 0.172563, 'hap_71432': 0.227658, 'hap_123386': 0.218663, 'hap_106990': 0.161739, 'hap_108883': 0.170455, 'hap_100425': 0.025581, 'hap_100414': 0.026645, 'hap_540841': 0.006738, 'hap_98828': 0.002136, 'hap_1330207': 0.066206, 'PEC': 1.342249022, 'POC': 4.780376792}, 
'7': {'CO2': 2464.05, 'CH4': 7.828371, 'CO': 146.3082, 'NOX': 4.82797, 'SO2': 1.11736, 'PM2.5': 4.72, 'PM10': 6.61, 'VOC': 18.25821, 'NH3': 1.747, 'hap_50000': 0.695364, 'hap_75070': 1.943024, 'hap_110543': 0.031876, 'hap_71432': 0.234892, 'hap_123386': 0.258272, 'hap_106990': 0.195879, 'hap_108883': 0.246106, 'hap_100425': 0.032692, 'hap_100414': 0.038401, 'hap_540841': 0.011214, 'hap_98828': 0.00333, 'hap_1330207': 0.09189, 'PEC': 0.51448, 'POC': 1.832304}, 
'8': {'CO2': 2592.43, 'CH4': 2.906, 'CO': 78.50227, 'NOX': 4.288119, 'SO2': 1.8921, 'PM2.5': 2.38, 'PM10': 9.83, 'VOC': 14.7, 'NH3': 1.7083, 'hap_50000': 0.8, 'hap_75070': 0.238933, 'hap_110543': 0.1, 'hap_71432': 0.58, 'hap_123386': 0.044267, 'hap_106990': 0.0, 'hap_108883': 0.6, 'hap_100425': 0.001867, 'hap_100414': 0.92, 'hap_540841': 0.16, 'hap_98828': 0.0, 'hap_1330207': 0.00656, 'PEC': 0.947701918, 'POC': 3.375209949}, 
'9': {'CO2': 3031.37, 'CH4': 5.632874736, 'CO': 127.7919467, 'NOX': 5.596176066, 'SO2': 2.344437922, 'PM2.5': 12.31421121, 'PM10': 16.99917976, 'VOC': 18.47246, 'NH3': 1.61, 'hap_50000': 1.025634, 'hap_75070': 1.521677, 'hap_110543': 0.172563, 'hap_71432': 0.227658, 'hap_123386': 0.218663, 'hap_106990': 0.161739, 'hap_108883': 0.170455, 'hap_100425': 0.025581, 'hap_100414': 0.026645, 'hap_540841': 0.006738, 'hap_98828': 0.002136, 'hap_1330207': 0.066206, 'PEC': 1.342249022, 'POC': 4.780376792}, 
'12': {'CO2': 3102.437387, 'CH4': 11.43408752, 'CO': 182.1079203, 'NOX': 4.314522868, 'SO2': 0.8, 'PM2.5': 23.22862976, 'PM10': 31.63666667, 'VOC': 18.47246, 'NH3': 1.61, 'hap_50000': 1.025634, 'hap_75070': 1.521677, 'hap_110543': 0.172563, 'hap_71432': 0.227658, 'hap_123386': 0.218663, 'hap_106990': 0.161739, 'hap_108883': 0.170455, 'hap_100425': 0.025581, 'hap_100414': 0.026645, 'hap_540841': 0.006738, 'hap_98828': 0.002136, 'hap_1330207': 0.066206, 'PEC': 2.531920644, 'POC': 9.017354073}, 
'13': {'CO2': 3186.414129, 'CH4': 4.164666332, 'CO': 108.1924165, 'NOX': 4.675427778, 'SO2': 1.630555868, 'PM2.5': 9.004487044, 'PM10': 17.72879583, 'VOC': 18.57959, 'NH3': 1.61, 'hap_50000': 1.19077, 'hap_75070': 1.311003, 'hap_110543': 0.242906, 'hap_71432': 0.224041, 'hap_123386': 0.198858, 'hap_106990': 0.144669, 'hap_108883': 0.13263, 'hap_100425': 0.022026, 'hap_100414': 0.020768, 'hap_540841': 0.0045, 'hap_98828': 0.001539, 'hap_1330207': 0.053364, 'PEC': 0.981489088, 'POC': 3.49554187}, 
'14': {'CO2': 3186.414129, 'CH4': 5.641080522, 'CO': 128.2045182, 'NOX': 5.819178461, 'SO2': 2.005720992, 'PM2.5': 10.22242942, 'PM10': 15.91333333, 'VOC': 18.57959, 'NH3': 1.61, 'hap_50000': 1.19077, 'hap_75070': 1.311003, 'hap_110543': 0.242906, 'hap_71432': 0.224041, 'hap_123386': 0.198858, 'hap_106990': 0.144669, 'hap_108883': 0.13263, 'hap_100425': 0.022026, 'hap_100414': 0.020768, 'hap_540841': 0.0045, 'hap_98828': 0.001539, 'hap_1330207': 0.053364, 'PEC': 1.114244807, 'POC': 3.968347101}, 
'15': {'CO2': 3031.37, 'CH4': 6.755527828, 'CO': 136.9143687, 'NOX': 6.607029217, 'SO2': 3.131320992, 'PM2.5': 12.37676951, 'PM10': 17.73, 'VOC': 18.47246, 'NH3': 1.61, 'hap_50000': 1.025634, 'hap_75070': 1.521677, 'hap_110543': 0.172563, 'hap_71432': 0.227658, 'hap_123386': 0.218663, 'hap_106990': 0.161739, 'hap_108883': 0.170455, 'hap_100425': 0.025581, 'hap_100414': 0.026645, 'hap_540841': 0.006738, 'hap_98828': 0.002136, 'hap_1330207': 0.066206, 'PEC': 1.349067877, 'POC': 4.804661924}, 
'16': {'CO2': 3031.37, 'CH4': 5.279113638, 'CO': 116.9022671, 'NOX': 5.463278534, 'SO2': 2.756155868, 'PM2.5': 11.15882713, 'PM10': 19.5454625, 'VOC': 18.47246, 'NH3': 1.61, 'hap_50000': 1.025634, 'hap_75070': 1.521677, 'hap_110543': 0.172563, 'hap_71432': 0.227658, 'hap_123386': 0.218663, 'hap_106990': 0.161739, 'hap_108883': 0.170455, 'hap_100425': 0.025581, 'hap_100414': 0.026645, 'hap_540841': 0.006738, 'hap_98828': 0.002136, 'hap_1330207': 0.066206, 'PEC': 1.216312157, 'POC': 4.331856692}, 
'17': {'CO2': 3186.414129, 'CH4': 5.190383305, 'CO': 118.9945329, 'NOX': 5.537184811, 'SO2': 2.005720992, 'PM2.5': 10.22242942, 'PM10': 15.91333333, 'VOC': 18.57959, 'NH3': 1.61, 'hap_50000': 1.19077, 'hap_75070': 1.311003, 'hap_110543': 0.242906, 'hap_71432': 0.224041, 'hap_123386': 0.198858, 'hap_106990': 0.144669, 'hap_108883': 0.13263, 'hap_100425': 0.022026, 'hap_100414': 0.020768, 'hap_540841': 0.0045, 'hap_98828': 0.001539, 'hap_1330207': 0.053364, 'PEC': 1.114244807, 'POC': 3.968347101}, 
'25': {'CO2': 3224.4, 'CH4': 5.0, 'CO': 128.48, 'NOX': 7.06, 'SO2': 2.52, 'PM2.5': 25.36, 'PM10': 26.38, 'VOC': 43.25, 'NH3': 1.82, 'hap_50000': 4.29432, 'hap_75070': 5.335237, 'hap_110543': 0.0041, 'hap_71432': 0.702108, 'hap_123386': 0.0, 'hap_106990': 0.228667, 'hap_108883': 0.356012, 'hap_100425': 0.0, 'hap_100414': 0.32, 'hap_540841': 0.0, 'hap_98828': 0.0, 'hap_1330207': 0.063, 'PEC': 1.0, 'POC': 4.0}, 
'26': {'CO2': 3224.4, 'CH4': 5.0, 'CO': 128.48, 'NOX': 7.06, 'SO2': 2.52, 'PM2.5': 25.36, 'PM10': 26.38, 'VOC': 43.25, 'NH3': 1.82, 'hap_50000': 4.29432, 'hap_75070': 5.335237, 'hap_110543': 0.0041, 'hap_71432': 0.702108, 'hap_123386': 0.0, 'hap_106990': 0.228667, 'hap_108883': 0.356012, 'hap_100425': 0.0, 'hap_100414': 0.32, 'hap_540841': 0.0, 'hap_98828': 0.0, 'hap_1330207': 0.063, 'PEC': 1.0, 'POC': 4.0}
}


CDL_CROP_MAP = {'1': '1', '12': '1', '13': '1', '226': '1', '237': '1', # Corn
  '22': '2', '23': '2', '24': '2', '230': '2', '234': '2', '236': '2', # Wheat
  '5': '3', '52': '3', '240': '3', '254': '3', # Soy
  '2': '4', '232': '4', # Cotton
  '61': '6', # Fallow
  '3': '7', # Rice
  '45': '8', # Sugarcane
  '225': '13', # Winterwheat/Corn
  '238': '14', # Winterwheat/Cotton
  '239': '15', # Soybean/Cotton
  '241': '16', # Corn/Soy
  '26': '17', # Winterwheat/Soy
  '37': '25', '176': '25', '256': '25' # Grass/Pasture
} 

FCCS_CROP_MAP = {'1281': '25', '131': '25', '133': '25', '175': '25', '176': '25', '203': '25', 
  '213': '25', '236': '25', '280': '25', '302': '25', '315': '25', '318': '25', '336': '25', 
  '41': '25', '415': '25', '417': '25', '420': '25', '435': '25', '436': '25', '437': '25', 
  '442': '25', '443': '25', '445': '25', '453': '25', '506': '25', '514': '25', '519': '25', 
  '530': '25', '531': '25', '532': '25', '533': '25', '57': '25', '65': '25', '66': '25', # Grass/Pasture
  '1261': '6', # Fallow
  '1203': '7', # Rice
  '1223': '2' # Wheat
 } 


class Crops2Ef(BasicEFLookup):
    """Class for looking up emission factors for Crop fuelbed types
    """

    def __init__(self, crop_fuelbed_id):
        """Constructor - reads FCCS-based emissions factors into dictionary
        for quick access.

        Args:
         - crop_fuelbed_id - Integer ID of modified CDL crop type (9000+CDL ID)
        """
        if int(crop_fuelbed_id) > 9000:
            try:
                self.crop_fuelbed_id = CDL_CROP_MAP[str(int(crop_fuelbed_id)-9000)]
            except KeyError:
                self.crop_fuelbed_id = '12'
        else:
            try:
                self.crop_fuelbed_id = FCCS_CROP_MAP[str(int(crop_fuelbed_id))]
            except KeyError:
                self.crop_fuelbed_id = '12'
        # Lookup the crop bed, select the "other crops" type if it isn't found 
        self.efs = CROPSEF[self.crop_fuelbed_id]

    def get(self, **kwargs):
        """Looks up and returns cover type specific emission factors

        Kwargs:
         - species -- chemical species; phase, fuel_category, and
            if fuel_sub_category must also be defined

        Notes:
         - returns None if any of the arguments are invalid.

        Examples:
        >>> lu = Crops2Ef(9002)
        >>> lu.get(species='CO2')
        """
        if any([not kwargs.get(e) for e in ('species',)]):
            raise LookupError("Specify species")

        species = kwargs.get('species')
        try:
            return self.efs[species]
        except KeyError:
            return None

    def species(self, phase):
        return set(self.efs.keys())

